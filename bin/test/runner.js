// Generated by CoffeeScript 1.7.1
(function() {
  var api, async, chai, continuum, examples, fs, fs_tools, js_test, options, path, _;

  js_test = require('jstest');

  chai = require('chai');

  fs_tools = require('fs-tools');

  fs = require('fs');

  path = require('path');

  async = require('async');

  _ = require('lodash');

  continuum = require('../continuum.js');

  api = require('../api.js');

  examples = require('./examples.js');

  options = examples.options;

  async.series([
    function(back) {
      return fs_tools.mkdir(options.input.path, back);
    }, function(back) {
      return async.each(_.keys(examples), function(example, next) {
        var file_name;
        if (example === 'options') {
          return next();
        }
        file_name = options.input.path + '\\' + example + examples[example].extension;
        return async.series([
          function(back) {
            return fs_tools.mkdir(path.dirname(file_name), back);
          }, function(back) {
            return fs.writeFile(file_name, examples[example].content, {
              encoding: examples[example].encoding
            }, back);
          }
        ], next);
      }, back);
    }, function(back) {
      return continuum.run(options, back);
    }, function(back) {
      js_test.cache = false;
      js_test.Test.ASSERTION_ERRORS.push(chai.AssertionError);
      return js_test.load('./continuum.js', './api.js', function() {
        return js_test.Test.autorun(function(runner) {
          runner.setReporter(new js_test.Test.Reporters.Spec());
          runner.addReporter(js_test.Test.Reporters.ExitStatus());
          runner.addReporter(js_test.Test.Reporters.Error());
          return back();
        });
      });
    }
  ], function(err) {
    if (err) {
      return console.error(err);
    }
  });

}).call(this);

//# sourceMappingURL=runner.map
